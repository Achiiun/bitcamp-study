2022.07.04(Mon)
- 1.git client download(git server에 응답해서 자료를 다운받기위해)
  - cmd(명령 프롬프트)에서 디렉토리 생성    
    - mkdir 디렉토리이름
  - git 설치 시 체크해야 하는 두 가지 
    - Override the default~~ main
    - None : Do not use a credential help
 - cmd(명령 프롬프트)에서 git 서버 복사해오는 방법
    - git clone URL(Uniform Resource Locator)

- 2.JDK(Java Development Kit) 설치
  - 2-1 제품군: JAVA SE,EE,ME
    - JAVA SE(Standard Edition-Java App. 일반용)
    - JDK(Java Development Kit): Java App. 개발도구(컴파일러,JVM,디버거,JavaDoc,...)
    - JRE(Java Runtime Environment): Java App. 실행도구
    - JAVA EE(Enterprise Edition-Java App. 기업용)
      - 분산 컴퓨팅
      - 웹 컴퓨팅
      - 서버자원관리
      - 보안
      - ...
  - 2-2 설치 순서
    - ①JDK설치
    - ②JAVA_HOME 환경변수 설정: 일부의 Java App.은 실행될 때 JDK 또는 JRE가 설치된 폴더의 위치를 조회하는 경우가 있기 때문에 설정
    - ③PATH 환경변수에 프로그램 폴더 경로 등록: cmd(명령프롬프트)의 디렉토리 위치에 상관없이 자바 개발도구를 실행할 수 잇도록 하기 위해 등록

- 3.VSCode(Editor) 설치
   - 확장프로그램: Extension Pack for Java, Gradle for Java

- 4."Hello" 출력해보기
  - ①VSCode 작성
     ``` java // 컴파일 테스트    
     class Hello {
      public static void main(String[] args){
        System.out.println("Hello!");
      }
    }
    ```
  - ②compile
    - cmd(명령 프롬프트) javac Hello.java  
  - ③출력
    - cmd(명령 프롬프트) java Hello
  - *주의사항
    - vscode -> *.java(compile) 
      - 저장(UTF-8)
    - *.java -> *.class                     
      - 실행
        - Windows:OS의 기본 문자집합인 MS949로 저장되었다고 간주하기 때문에 한글입력시 오류발생시 
          - java -encoding UTF-8 *.java
        - UNIX:UTF-8로 저장되었다고 간주하기 때문에 한글입력시 오류X


2022.07.05(Tue)
﻿
* 메모리 크기와 값 저장
1byte = 8bit □□□□□□□□
1bit ■=전기o , 1bit□=전기x
□□□□□□□□ 256(2^8)가지의 상태

*비트의 전기상태를 효과적으로 표시하기
□■■□ = 0110(2진수) ->전기적 신호를 2진수로 표현
값 -> 2진수 ->메모리
어떤값을 메모리에 저장하려면 2진수로 바꿀수 있어야한다.
-정수
-부동소수점
-문자
-논리값
-그림
-소리
-냄새 ->X

*정수를 2진수로 표현하는 다양한 방법
① Sign-Magnitude
□(부호비트)□□□(절대값)
+4: 0(부호비트)100(절대값)
-4: 1(부호비트)100(절대값)
+-8을 저장하기위해 최소 5bit 필요11000
4+(-2) =2
0100(4)+1010(-2)=1110(-6) -> 오류
② 1의보수
+4:0100
-4:1011(1의보수)
4+(-2)=2
0100(4)+1101(-2)=0001(1) ->오류(오버플로우) 나와야 할 결과보다 1작은 수가 결과로 나온다.
③ 2의보수
+4:0100
-2:1110(2의보수)
4+(-2)=2
0100(4)+1110(-2)=0010(2) -> 자바에서 정수를 2진수로 바꿀 때 사용하는 규칙
④Excess-k(bias) -> 부동소수점을 2진수로 바꾸는 과정에서 지수부를 표현할 때 사용
+4 = 4+7(2^(비트수-1)-1) = 11 = 1011 (4비트로 표현시)
-4 = -4+7(2^(비트수-1)-1) = 3 = 0011 (4비트로 표현시)

*부동소수점을 2진수로 표현하는 방법
12.375
12 = 1100 (sign-magnitude공식을 적용)
0.375 = 0.011 0.375*2 =0.75 ->0
0.75*2 =1.5 ->1
0.5*2= 1->1
12.375 = 1100.011 = 1(버려짐).10011(가수)*2^3(지수)
지수(Excess-k):3+2^(8-1)-1=3+128-1=130=10000010
32bit memory
□(부호비트)□□□□□□□□(지수)□□□□□□□□□□□□□□□□□□□□□□‥□□□□(가수)
부호비트: +(0) -(1)
지수: 10000010
가수:10001100‥00 (남은 메모리 자리는 0으로 채움)

*문자를 2진수로 표현하는 방법
①ASCII (7bit) - 미국표준
최대 128자 (영어+숫자+특수문자)
②ISO-8859-1(8bit) - 국제표준
최대 256자 (ASCII+유럽문자)
③EUC-KR(ksc-5601)(2byte) - 국제표준
영어: ISO-8859-1(1byte)
한글: 2byte
최대 65535자(한글:2350자)
④조합형(2byte) - 기업->국가 표준
초성+중성+종성 조합하여 모든 한글문자 가능
⑤MS949(CP949)(2byte) -기업
EUC-KR + 약8000자 규칙추가 (한글 11172자)
⑥unicode(2byte) = UTF-16 -국제표준
⑦UTF-8 유니코드 변형규칙-국제표준
8bit로 표현할 수 있는 문자는 예전처럼 그대로 8bit로 표현하고 그 외 문자는 규칙에 따라 변형한다
한글 2byte -> 3byte

정수 -> 2진수 (2의보수)
부동소수점 -> 2진수 (IEEE-754)
문자 -> 2진수 (UTF-8)
내가 보내는 데이터는 문자 데이터인데 MS949라는 문자 집합 규칙에 따라 2진수로 변환한거다. 그러니 너가 받아서 이 규칙에 따라 읽어라 = 내가 너에게 MS949로 인코딩된 데이터를 보낸다


*github
①github.com 회원가입 후 repositorys에 저장소 만들기 (README.md 만들기)
②cmd에서 자신이 복사해올 디렉토리로 이동 후 (cd git) 'git clone 주소' 으로 복사해오기
③.gitignore (github에 백업하지 말아야 할 파일 목록들) 넣어주기
④파일 편집 및 백업
-Hello.java 파일작성
-local 저장소에 백업
git add Hello.java(백업 명단에 파일을 등록한다=staged상태)
ㄴgit add . (해당 디렉토리에 변경된 모든 파일을 백업)
git commit -m "백업이유" (백업 명단에 등록된 파일이나 폴더를 로컬저장소에 백업한다=snapshot상태)
git config --global user.email "이메일주소"
git config --global user.name "유저이름"
git commit -m "백업이유"
⑤local 백업을 repo.에 업로드
git push
계정
통행증발급 : 프로필 setting-personal access tokens -new personal access token-select scopes에서 repo만 체크-generate token- 토큰 주소를 메일로 저장해놓기
통행증 누를때 cmd창에 복사 붙여넣기(오른쪽마우스 클릭 한번)

*컴파일과 클래스파일의 관계
*.java ---------> *.class(bytecode = p-code)----------->JVM-------->OS
       compile                                        loading            실행
도메인:특정영역
소스파일을 컴파일하면 소스파일에 있는 클래스블록 단위로 class파일이 생성된다.
유지보수가 쉽도록 1클래스 1소스파일 클래스명=소스파일명 으로 한다
Exam01.java --------->컴파일 시 세가지 class파일 생성 (Exam01.class로 생기는것이 아님)
class A{}                        A.class
class B{}                        B.class
class C{}                        C.class


*S/W
data를 가공해서 data를 출력하거나 정보를 출력
class :서로관련된 메서드를 분류

*자바 소스파일과 클래스파일 분리
bitcamp-study/src/Hello.java
bin/Hello.class
> javac -d bin(.class 파일을 둘 폴더를 지정) -encoding utf-8 src/Hello.java
> java -classpath(-cp) bin Hello

*한개의 git 저장소에 여러개의 프로젝트 만들기
bitcamp-study/ <-git 저장소
java-lang/src/Hello.java
/bin/Hello.class

*자바 호환(compatible)언어
.java 컴파일 .class
.kt 컴파일 .class => 호환가능
.goovy 컴파일 .class

﻿